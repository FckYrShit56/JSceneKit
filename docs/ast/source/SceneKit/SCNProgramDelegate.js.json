{
  "type": "File",
  "start": 0,
  "end": 3652,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 86,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3652,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 86,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportDefaultDeclaration",
        "start": 281,
        "end": 3651,
        "loc": {
          "start": {
            "line": 12,
            "column": 0
          },
          "end": {
            "line": 85,
            "column": 1
          }
        },
        "declaration": {
          "type": "ClassDeclaration",
          "start": 296,
          "end": 3651,
          "loc": {
            "start": {
              "line": 12,
              "column": 15
            },
            "end": {
              "line": 85,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 302,
            "end": 320,
            "loc": {
              "start": {
                "line": 12,
                "column": 21
              },
              "end": {
                "line": 12,
                "column": 39
              },
              "identifierName": "SCNProgramDelegate"
            },
            "name": "SCNProgramDelegate",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 321,
            "end": 3651,
            "loc": {
              "start": {
                "line": 12,
                "column": 40
              },
              "end": {
                "line": 85,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 396,
                "end": 408,
                "loc": {
                  "start": {
                    "line": 19,
                    "column": 2
                  },
                  "end": {
                    "line": 20,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 396,
                  "end": 400,
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 2
                    },
                    "end": {
                      "line": 19,
                      "column": 6
                    },
                    "identifierName": "init"
                  },
                  "name": "init",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "start": 403,
                  "end": 408,
                  "loc": {
                    "start": {
                      "line": 19,
                      "column": 9
                    },
                    "end": {
                      "line": 20,
                      "column": 3
                    }
                  },
                  "body": [],
                  "directives": [],
                  "leadingComments": null,
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * constructor\n   * @access public\n   * @returns {void}\n   ",
                    "start": 326,
                    "end": 393,
                    "loc": {
                      "start": {
                        "line": 14,
                        "column": 2
                      },
                      "end": {
                        "line": 18,
                        "column": 5
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Handling Shader Compilation Errors",
                    "start": 412,
                    "end": 449,
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 2
                      },
                      "end": {
                        "line": 22,
                        "column": 39
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Tells the delegate that an error occurred when compiling GLSL source code.\n   * @access public\n   * @param {SCNProgram} program - The program that generated the compilation error.\n   * @param {Error} error - The compilation error that was raised.\n   * @returns {void}\n   * @desc Examine the error parameter for details of the compilation error provided by the GLSL compiler.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523007-program\n   ",
                    "start": 453,
                    "end": 938,
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 2
                      },
                      "end": {
                        "line": 32,
                        "column": 5
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 941,
                "end": 981,
                "loc": {
                  "start": {
                    "line": 33,
                    "column": 2
                  },
                  "end": {
                    "line": 34,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 941,
                  "end": 959,
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 2
                    },
                    "end": {
                      "line": 33,
                      "column": 20
                    },
                    "identifierName": "programHandleError"
                  },
                  "name": "programHandleError",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 960,
                    "end": 967,
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 21
                      },
                      "end": {
                        "line": 33,
                        "column": 28
                      },
                      "identifierName": "program"
                    },
                    "name": "program"
                  },
                  {
                    "type": "Identifier",
                    "start": 969,
                    "end": 974,
                    "loc": {
                      "start": {
                        "line": 33,
                        "column": 30
                      },
                      "end": {
                        "line": 33,
                        "column": 35
                      },
                      "identifierName": "error"
                    },
                    "name": "error"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 976,
                  "end": 981,
                  "loc": {
                    "start": {
                      "line": 33,
                      "column": 37
                    },
                    "end": {
                      "line": 34,
                      "column": 3
                    }
                  },
                  "body": [],
                  "directives": [],
                  "leadingComments": null,
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Handling Shader Compilation Errors",
                    "start": 412,
                    "end": 449,
                    "loc": {
                      "start": {
                        "line": 22,
                        "column": 2
                      },
                      "end": {
                        "line": 22,
                        "column": 39
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Tells the delegate that an error occurred when compiling GLSL source code.\n   * @access public\n   * @param {SCNProgram} program - The program that generated the compilation error.\n   * @param {Error} error - The compilation error that was raised.\n   * @returns {void}\n   * @desc Examine the error parameter for details of the compilation error provided by the GLSL compiler.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523007-program\n   ",
                    "start": 453,
                    "end": 938,
                    "loc": {
                      "start": {
                        "line": 24,
                        "column": 2
                      },
                      "end": {
                        "line": 32,
                        "column": 5
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Finding Fragment Opaqueness",
                    "start": 985,
                    "end": 1015,
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 2
                      },
                      "end": {
                        "line": 36,
                        "column": 32
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Asks the delegate whether fragments rendered by a program are opaque.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - \n   * @returns {boolean} - \n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523068-programisopaque\n   ",
                    "start": 1019,
                    "end": 1307,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 2
                      },
                      "end": {
                        "line": 45,
                        "column": 5
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 1310,
                "end": 1357,
                "loc": {
                  "start": {
                    "line": 46,
                    "column": 2
                  },
                  "end": {
                    "line": 48,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1310,
                  "end": 1325,
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 2
                    },
                    "end": {
                      "line": 46,
                      "column": 17
                    },
                    "identifierName": "programIsOpaque"
                  },
                  "name": "programIsOpaque",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1326,
                    "end": 1333,
                    "loc": {
                      "start": {
                        "line": 46,
                        "column": 18
                      },
                      "end": {
                        "line": 46,
                        "column": 25
                      },
                      "identifierName": "program"
                    },
                    "name": "program"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1335,
                  "end": 1357,
                  "loc": {
                    "start": {
                      "line": 46,
                      "column": 27
                    },
                    "end": {
                      "line": 48,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 1341,
                      "end": 1353,
                      "loc": {
                        "start": {
                          "line": 47,
                          "column": 4
                        },
                        "end": {
                          "line": 47,
                          "column": 16
                        }
                      },
                      "argument": {
                        "type": "BooleanLiteral",
                        "start": 1348,
                        "end": 1353,
                        "loc": {
                          "start": {
                            "line": 47,
                            "column": 11
                          },
                          "end": {
                            "line": 47,
                            "column": 16
                          }
                        },
                        "value": false
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Finding Fragment Opaqueness",
                    "start": 985,
                    "end": 1015,
                    "loc": {
                      "start": {
                        "line": 36,
                        "column": 2
                      },
                      "end": {
                        "line": 36,
                        "column": 32
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Asks the delegate whether fragments rendered by a program are opaque.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - \n   * @returns {boolean} - \n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523068-programisopaque\n   ",
                    "start": 1019,
                    "end": 1307,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 2
                      },
                      "end": {
                        "line": 45,
                        "column": 5
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Binding and Unbinding Values",
                    "start": 1361,
                    "end": 1392,
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 2
                      },
                      "end": {
                        "line": 50,
                        "column": 33
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Invoked on the delegate to let it bind program values and/or associated graphics resources (such as textures) for symbols.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to bind values for.\n   * @param {string} symbol - The name of the symbol to bind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the binding is made.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n   * @returns {boolean} - \n   * @desc If you use the handleBinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:bindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1524155-program\n   ",
                    "start": 1396,
                    "end": 2416,
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 2
                      },
                      "end": {
                        "line": 64,
                        "column": 5
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 2419,
                "end": 2525,
                "loc": {
                  "start": {
                    "line": 65,
                    "column": 2
                  },
                  "end": {
                    "line": 67,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 2419,
                  "end": 2454,
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 2
                    },
                    "end": {
                      "line": 65,
                      "column": 37
                    },
                    "identifierName": "programBindValueForSymbolAtLocation"
                  },
                  "name": "programBindValueForSymbolAtLocation",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 2455,
                    "end": 2462,
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 38
                      },
                      "end": {
                        "line": 65,
                        "column": 45
                      },
                      "identifierName": "program"
                    },
                    "name": "program"
                  },
                  {
                    "type": "Identifier",
                    "start": 2464,
                    "end": 2470,
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 47
                      },
                      "end": {
                        "line": 65,
                        "column": 53
                      },
                      "identifierName": "symbol"
                    },
                    "name": "symbol"
                  },
                  {
                    "type": "Identifier",
                    "start": 2472,
                    "end": 2480,
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 55
                      },
                      "end": {
                        "line": 65,
                        "column": 63
                      },
                      "identifierName": "location"
                    },
                    "name": "location"
                  },
                  {
                    "type": "Identifier",
                    "start": 2482,
                    "end": 2491,
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 65
                      },
                      "end": {
                        "line": 65,
                        "column": 74
                      },
                      "identifierName": "programID"
                    },
                    "name": "programID"
                  },
                  {
                    "type": "Identifier",
                    "start": 2493,
                    "end": 2501,
                    "loc": {
                      "start": {
                        "line": 65,
                        "column": 76
                      },
                      "end": {
                        "line": 65,
                        "column": 84
                      },
                      "identifierName": "renderer"
                    },
                    "name": "renderer"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 2503,
                  "end": 2525,
                  "loc": {
                    "start": {
                      "line": 65,
                      "column": 86
                    },
                    "end": {
                      "line": 67,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "start": 2509,
                      "end": 2521,
                      "loc": {
                        "start": {
                          "line": 66,
                          "column": 4
                        },
                        "end": {
                          "line": 66,
                          "column": 16
                        }
                      },
                      "argument": {
                        "type": "BooleanLiteral",
                        "start": 2516,
                        "end": 2521,
                        "loc": {
                          "start": {
                            "line": 66,
                            "column": 11
                          },
                          "end": {
                            "line": 66,
                            "column": 16
                          }
                        },
                        "value": false
                      }
                    }
                  ],
                  "directives": [],
                  "trailingComments": null
                },
                "leadingComments": [
                  {
                    "type": "CommentLine",
                    "value": " Binding and Unbinding Values",
                    "start": 1361,
                    "end": 1392,
                    "loc": {
                      "start": {
                        "line": 50,
                        "column": 2
                      },
                      "end": {
                        "line": 50,
                        "column": 33
                      }
                    }
                  },
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Invoked on the delegate to let it bind program values and/or associated graphics resources (such as textures) for symbols.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to bind values for.\n   * @param {string} symbol - The name of the symbol to bind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the binding is made.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n   * @returns {boolean} - \n   * @desc If you use the handleBinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:bindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1524155-program\n   ",
                    "start": 1396,
                    "end": 2416,
                    "loc": {
                      "start": {
                        "line": 52,
                        "column": 2
                      },
                      "end": {
                        "line": 64,
                        "column": 5
                      }
                    }
                  }
                ],
                "trailingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Invoked on the delegate to let it unbind program values and/or also unbind associated graphic resources (such as textures).\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to unbind values for.\n   * @param {string} symbol - The name of the symbol to unbind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the unbinding is done.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n\n   * @returns {void}\n   * @desc If you use the handleUnbinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:unbindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523857-program\n   ",
                    "start": 2529,
                    "end": 3555,
                    "loc": {
                      "start": {
                        "line": 69,
                        "column": 2
                      },
                      "end": {
                        "line": 82,
                        "column": 5
                      }
                    }
                  }
                ]
              },
              {
                "type": "ClassMethod",
                "start": 3558,
                "end": 3649,
                "loc": {
                  "start": {
                    "line": 83,
                    "column": 2
                  },
                  "end": {
                    "line": 84,
                    "column": 3
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 3558,
                  "end": 3595,
                  "loc": {
                    "start": {
                      "line": 83,
                      "column": 2
                    },
                    "end": {
                      "line": 83,
                      "column": 39
                    },
                    "identifierName": "programUnbindValueForSymbolAtLocation"
                  },
                  "name": "programUnbindValueForSymbolAtLocation",
                  "leadingComments": null
                },
                "static": false,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 3596,
                    "end": 3603,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 40
                      },
                      "end": {
                        "line": 83,
                        "column": 47
                      },
                      "identifierName": "program"
                    },
                    "name": "program"
                  },
                  {
                    "type": "Identifier",
                    "start": 3605,
                    "end": 3611,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 49
                      },
                      "end": {
                        "line": 83,
                        "column": 55
                      },
                      "identifierName": "symbol"
                    },
                    "name": "symbol"
                  },
                  {
                    "type": "Identifier",
                    "start": 3613,
                    "end": 3621,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 57
                      },
                      "end": {
                        "line": 83,
                        "column": 65
                      },
                      "identifierName": "location"
                    },
                    "name": "location"
                  },
                  {
                    "type": "Identifier",
                    "start": 3623,
                    "end": 3632,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 67
                      },
                      "end": {
                        "line": 83,
                        "column": 76
                      },
                      "identifierName": "programID"
                    },
                    "name": "programID"
                  },
                  {
                    "type": "Identifier",
                    "start": 3634,
                    "end": 3642,
                    "loc": {
                      "start": {
                        "line": 83,
                        "column": 78
                      },
                      "end": {
                        "line": 83,
                        "column": 86
                      },
                      "identifierName": "renderer"
                    },
                    "name": "renderer"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 3644,
                  "end": 3649,
                  "loc": {
                    "start": {
                      "line": 83,
                      "column": 88
                    },
                    "end": {
                      "line": 84,
                      "column": 3
                    }
                  },
                  "body": [],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n   * Invoked on the delegate to let it unbind program values and/or also unbind associated graphic resources (such as textures).\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to unbind values for.\n   * @param {string} symbol - The name of the symbol to unbind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the unbinding is done.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n\n   * @returns {void}\n   * @desc If you use the handleUnbinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:unbindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523857-program\n   ",
                    "start": 2529,
                    "end": 3555,
                    "loc": {
                      "start": {
                        "line": 69,
                        "column": 2
                      },
                      "end": {
                        "line": 82,
                        "column": 5
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentLine",
              "value": "import SCNProgram from './SCNProgram'",
              "start": 14,
              "end": 53,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 3,
                  "column": 39
                }
              }
            },
            {
              "type": "CommentLine",
              "value": "import SCNRenderer from './SCNRenderer'",
              "start": 54,
              "end": 95,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 4,
                  "column": 41
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * The interface for tracking errors that occur when compiling shader source code.\n * @interface\n * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate\n ",
              "start": 98,
              "end": 280,
              "loc": {
                "start": {
                  "line": 7,
                  "column": 0
                },
                "end": {
                  "line": 11,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentLine",
            "value": "import SCNProgram from './SCNProgram'",
            "start": 14,
            "end": 53,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 39
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "import SCNRenderer from './SCNRenderer'",
            "start": 54,
            "end": 95,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 41
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * The interface for tracking errors that occur when compiling shader source code.\n * @interface\n * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate\n ",
            "start": 98,
            "end": 280,
            "loc": {
              "start": {
                "line": 7,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": [
      {
        "type": "Directive",
        "start": 0,
        "end": 12,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 12
          }
        },
        "value": {
          "type": "DirectiveLiteral",
          "start": 0,
          "end": 12,
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 1,
              "column": 12
            }
          },
          "value": "use strict",
          "extra": {
            "raw": "'use strict'",
            "rawValue": "use strict"
          },
          "trailingComments": null
        },
        "trailingComments": [
          {
            "type": "CommentLine",
            "value": "import SCNProgram from './SCNProgram'",
            "start": 14,
            "end": 53,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 39
              }
            }
          },
          {
            "type": "CommentLine",
            "value": "import SCNRenderer from './SCNRenderer'",
            "start": 54,
            "end": 95,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 41
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * The interface for tracking errors that occur when compiling shader source code.\n * @interface\n * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate\n ",
            "start": 98,
            "end": 280,
            "loc": {
              "start": {
                "line": 7,
                "column": 0
              },
              "end": {
                "line": 11,
                "column": 3
              }
            }
          }
        ]
      }
    ]
  },
  "comments": [
    {
      "type": "CommentLine",
      "value": "import SCNProgram from './SCNProgram'",
      "start": 14,
      "end": 53,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 39
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "import SCNRenderer from './SCNRenderer'",
      "start": 54,
      "end": 95,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The interface for tracking errors that occur when compiling shader source code.\n * @interface\n * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate\n ",
      "start": 98,
      "end": 280,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * constructor\n   * @access public\n   * @returns {void}\n   ",
      "start": 326,
      "end": 393,
      "loc": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 18,
          "column": 5
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Handling Shader Compilation Errors",
      "start": 412,
      "end": 449,
      "loc": {
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 22,
          "column": 39
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Tells the delegate that an error occurred when compiling GLSL source code.\n   * @access public\n   * @param {SCNProgram} program - The program that generated the compilation error.\n   * @param {Error} error - The compilation error that was raised.\n   * @returns {void}\n   * @desc Examine the error parameter for details of the compilation error provided by the GLSL compiler.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523007-program\n   ",
      "start": 453,
      "end": 938,
      "loc": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 32,
          "column": 5
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Finding Fragment Opaqueness",
      "start": 985,
      "end": 1015,
      "loc": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 36,
          "column": 32
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Asks the delegate whether fragments rendered by a program are opaque.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - \n   * @returns {boolean} - \n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523068-programisopaque\n   ",
      "start": 1019,
      "end": 1307,
      "loc": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 5
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Binding and Unbinding Values",
      "start": 1361,
      "end": 1392,
      "loc": {
        "start": {
          "line": 50,
          "column": 2
        },
        "end": {
          "line": 50,
          "column": 33
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Invoked on the delegate to let it bind program values and/or associated graphics resources (such as textures) for symbols.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to bind values for.\n   * @param {string} symbol - The name of the symbol to bind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the binding is made.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n   * @returns {boolean} - \n   * @desc If you use the handleBinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:bindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1524155-program\n   ",
      "start": 1396,
      "end": 2416,
      "loc": {
        "start": {
          "line": 52,
          "column": 2
        },
        "end": {
          "line": 64,
          "column": 5
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Invoked on the delegate to let it unbind program values and/or also unbind associated graphic resources (such as textures).\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to unbind values for.\n   * @param {string} symbol - The name of the symbol to unbind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the unbinding is done.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n\n   * @returns {void}\n   * @desc If you use the handleUnbinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:unbindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523857-program\n   ",
      "start": 2529,
      "end": 3555,
      "loc": {
        "start": {
          "line": 69,
          "column": 2
        },
        "end": {
          "line": 82,
          "column": 5
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "use strict",
      "start": 0,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "import SCNProgram from './SCNProgram'",
      "start": 14,
      "end": 53,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 39
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "import SCNRenderer from './SCNRenderer'",
      "start": 54,
      "end": 95,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * The interface for tracking errors that occur when compiling shader source code.\n * @interface\n * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate\n ",
      "start": 98,
      "end": 280,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 11,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 281,
      "end": 287,
      "loc": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 12,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 288,
      "end": 295,
      "loc": {
        "start": {
          "line": 12,
          "column": 7
        },
        "end": {
          "line": 12,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 296,
      "end": 301,
      "loc": {
        "start": {
          "line": 12,
          "column": 15
        },
        "end": {
          "line": 12,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SCNProgramDelegate",
      "start": 302,
      "end": 320,
      "loc": {
        "start": {
          "line": 12,
          "column": 21
        },
        "end": {
          "line": 12,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 321,
      "end": 322,
      "loc": {
        "start": {
          "line": 12,
          "column": 40
        },
        "end": {
          "line": 12,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * constructor\n   * @access public\n   * @returns {void}\n   ",
      "start": 326,
      "end": 393,
      "loc": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 18,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "init",
      "start": 396,
      "end": 400,
      "loc": {
        "start": {
          "line": 19,
          "column": 2
        },
        "end": {
          "line": 19,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 400,
      "end": 401,
      "loc": {
        "start": {
          "line": 19,
          "column": 6
        },
        "end": {
          "line": 19,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 401,
      "end": 402,
      "loc": {
        "start": {
          "line": 19,
          "column": 7
        },
        "end": {
          "line": 19,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 403,
      "end": 404,
      "loc": {
        "start": {
          "line": 19,
          "column": 9
        },
        "end": {
          "line": 19,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 407,
      "end": 408,
      "loc": {
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Handling Shader Compilation Errors",
      "start": 412,
      "end": 449,
      "loc": {
        "start": {
          "line": 22,
          "column": 2
        },
        "end": {
          "line": 22,
          "column": 39
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Tells the delegate that an error occurred when compiling GLSL source code.\n   * @access public\n   * @param {SCNProgram} program - The program that generated the compilation error.\n   * @param {Error} error - The compilation error that was raised.\n   * @returns {void}\n   * @desc Examine the error parameter for details of the compilation error provided by the GLSL compiler.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523007-program\n   ",
      "start": 453,
      "end": 938,
      "loc": {
        "start": {
          "line": 24,
          "column": 2
        },
        "end": {
          "line": 32,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programHandleError",
      "start": 941,
      "end": 959,
      "loc": {
        "start": {
          "line": 33,
          "column": 2
        },
        "end": {
          "line": 33,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 959,
      "end": 960,
      "loc": {
        "start": {
          "line": 33,
          "column": 20
        },
        "end": {
          "line": 33,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "program",
      "start": 960,
      "end": 967,
      "loc": {
        "start": {
          "line": 33,
          "column": 21
        },
        "end": {
          "line": 33,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 967,
      "end": 968,
      "loc": {
        "start": {
          "line": 33,
          "column": 28
        },
        "end": {
          "line": 33,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "error",
      "start": 969,
      "end": 974,
      "loc": {
        "start": {
          "line": 33,
          "column": 30
        },
        "end": {
          "line": 33,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 974,
      "end": 975,
      "loc": {
        "start": {
          "line": 33,
          "column": 35
        },
        "end": {
          "line": 33,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 976,
      "end": 977,
      "loc": {
        "start": {
          "line": 33,
          "column": 37
        },
        "end": {
          "line": 33,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 980,
      "end": 981,
      "loc": {
        "start": {
          "line": 34,
          "column": 2
        },
        "end": {
          "line": 34,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Finding Fragment Opaqueness",
      "start": 985,
      "end": 1015,
      "loc": {
        "start": {
          "line": 36,
          "column": 2
        },
        "end": {
          "line": 36,
          "column": 32
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Asks the delegate whether fragments rendered by a program are opaque.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - \n   * @returns {boolean} - \n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523068-programisopaque\n   ",
      "start": 1019,
      "end": 1307,
      "loc": {
        "start": {
          "line": 38,
          "column": 2
        },
        "end": {
          "line": 45,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programIsOpaque",
      "start": 1310,
      "end": 1325,
      "loc": {
        "start": {
          "line": 46,
          "column": 2
        },
        "end": {
          "line": 46,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1325,
      "end": 1326,
      "loc": {
        "start": {
          "line": 46,
          "column": 17
        },
        "end": {
          "line": 46,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "program",
      "start": 1326,
      "end": 1333,
      "loc": {
        "start": {
          "line": 46,
          "column": 18
        },
        "end": {
          "line": 46,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1333,
      "end": 1334,
      "loc": {
        "start": {
          "line": 46,
          "column": 25
        },
        "end": {
          "line": 46,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1335,
      "end": 1336,
      "loc": {
        "start": {
          "line": 46,
          "column": 27
        },
        "end": {
          "line": 46,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1341,
      "end": 1347,
      "loc": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 1348,
      "end": 1353,
      "loc": {
        "start": {
          "line": 47,
          "column": 11
        },
        "end": {
          "line": 47,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1356,
      "end": 1357,
      "loc": {
        "start": {
          "line": 48,
          "column": 2
        },
        "end": {
          "line": 48,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Binding and Unbinding Values",
      "start": 1361,
      "end": 1392,
      "loc": {
        "start": {
          "line": 50,
          "column": 2
        },
        "end": {
          "line": 50,
          "column": 33
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Invoked on the delegate to let it bind program values and/or associated graphics resources (such as textures) for symbols.\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to bind values for.\n   * @param {string} symbol - The name of the symbol to bind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the binding is made.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n   * @returns {boolean} - \n   * @desc If you use the handleBinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:bindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1524155-program\n   ",
      "start": 1396,
      "end": 2416,
      "loc": {
        "start": {
          "line": 52,
          "column": 2
        },
        "end": {
          "line": 64,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programBindValueForSymbolAtLocation",
      "start": 2419,
      "end": 2454,
      "loc": {
        "start": {
          "line": 65,
          "column": 2
        },
        "end": {
          "line": 65,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2454,
      "end": 2455,
      "loc": {
        "start": {
          "line": 65,
          "column": 37
        },
        "end": {
          "line": 65,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "program",
      "start": 2455,
      "end": 2462,
      "loc": {
        "start": {
          "line": 65,
          "column": 38
        },
        "end": {
          "line": 65,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2462,
      "end": 2463,
      "loc": {
        "start": {
          "line": 65,
          "column": 45
        },
        "end": {
          "line": 65,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "symbol",
      "start": 2464,
      "end": 2470,
      "loc": {
        "start": {
          "line": 65,
          "column": 47
        },
        "end": {
          "line": 65,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2470,
      "end": 2471,
      "loc": {
        "start": {
          "line": 65,
          "column": 53
        },
        "end": {
          "line": 65,
          "column": 54
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "location",
      "start": 2472,
      "end": 2480,
      "loc": {
        "start": {
          "line": 65,
          "column": 55
        },
        "end": {
          "line": 65,
          "column": 63
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2480,
      "end": 2481,
      "loc": {
        "start": {
          "line": 65,
          "column": 63
        },
        "end": {
          "line": 65,
          "column": 64
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programID",
      "start": 2482,
      "end": 2491,
      "loc": {
        "start": {
          "line": 65,
          "column": 65
        },
        "end": {
          "line": 65,
          "column": 74
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2491,
      "end": 2492,
      "loc": {
        "start": {
          "line": 65,
          "column": 74
        },
        "end": {
          "line": 65,
          "column": 75
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "renderer",
      "start": 2493,
      "end": 2501,
      "loc": {
        "start": {
          "line": 65,
          "column": 76
        },
        "end": {
          "line": 65,
          "column": 84
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2501,
      "end": 2502,
      "loc": {
        "start": {
          "line": 65,
          "column": 84
        },
        "end": {
          "line": 65,
          "column": 85
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2503,
      "end": 2504,
      "loc": {
        "start": {
          "line": 65,
          "column": 86
        },
        "end": {
          "line": 65,
          "column": 87
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2509,
      "end": 2515,
      "loc": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 66,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "false",
        "keyword": "false",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "false",
      "start": 2516,
      "end": 2521,
      "loc": {
        "start": {
          "line": 66,
          "column": 11
        },
        "end": {
          "line": 66,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2524,
      "end": 2525,
      "loc": {
        "start": {
          "line": 67,
          "column": 2
        },
        "end": {
          "line": 67,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n   * Invoked on the delegate to let it unbind program values and/or also unbind associated graphic resources (such as textures).\n   * @deprecated\n   * @access public\n   * @param {SCNProgram} program - The SCNProgram object to unbind values for.\n   * @param {string} symbol - The name of the symbol to unbind a value for.\n   * @param {number} location - The location of the symbol within the program object to be modified.\n   * @param {number} programID - The underlying OpenGL program object in which the unbinding is done.\n   * @param {SCNRenderer} renderer - The renderer that is currently rendering the scene.\n\n   * @returns {void}\n   * @desc If you use the handleUnbinding(ofSymbol:handler:) method to associate a handler block with a SceneKit object for a symbol, SceneKit will not call the delegate’s program(_:unbindValueForSymbol:atLocation:programID:renderer:) method for that symbol when rendering that object.\n   * @see https://developer.apple.com/documentation/scenekit/scnprogramdelegate/1523857-program\n   ",
      "start": 2529,
      "end": 3555,
      "loc": {
        "start": {
          "line": 69,
          "column": 2
        },
        "end": {
          "line": 82,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programUnbindValueForSymbolAtLocation",
      "start": 3558,
      "end": 3595,
      "loc": {
        "start": {
          "line": 83,
          "column": 2
        },
        "end": {
          "line": 83,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3595,
      "end": 3596,
      "loc": {
        "start": {
          "line": 83,
          "column": 39
        },
        "end": {
          "line": 83,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "program",
      "start": 3596,
      "end": 3603,
      "loc": {
        "start": {
          "line": 83,
          "column": 40
        },
        "end": {
          "line": 83,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3603,
      "end": 3604,
      "loc": {
        "start": {
          "line": 83,
          "column": 47
        },
        "end": {
          "line": 83,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "symbol",
      "start": 3605,
      "end": 3611,
      "loc": {
        "start": {
          "line": 83,
          "column": 49
        },
        "end": {
          "line": 83,
          "column": 55
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3611,
      "end": 3612,
      "loc": {
        "start": {
          "line": 83,
          "column": 55
        },
        "end": {
          "line": 83,
          "column": 56
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "location",
      "start": 3613,
      "end": 3621,
      "loc": {
        "start": {
          "line": 83,
          "column": 57
        },
        "end": {
          "line": 83,
          "column": 65
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3621,
      "end": 3622,
      "loc": {
        "start": {
          "line": 83,
          "column": 65
        },
        "end": {
          "line": 83,
          "column": 66
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "programID",
      "start": 3623,
      "end": 3632,
      "loc": {
        "start": {
          "line": 83,
          "column": 67
        },
        "end": {
          "line": 83,
          "column": 76
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3632,
      "end": 3633,
      "loc": {
        "start": {
          "line": 83,
          "column": 76
        },
        "end": {
          "line": 83,
          "column": 77
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "renderer",
      "start": 3634,
      "end": 3642,
      "loc": {
        "start": {
          "line": 83,
          "column": 78
        },
        "end": {
          "line": 83,
          "column": 86
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3642,
      "end": 3643,
      "loc": {
        "start": {
          "line": 83,
          "column": 86
        },
        "end": {
          "line": 83,
          "column": 87
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3644,
      "end": 3645,
      "loc": {
        "start": {
          "line": 83,
          "column": 88
        },
        "end": {
          "line": 83,
          "column": 89
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3648,
      "end": 3649,
      "loc": {
        "start": {
          "line": 84,
          "column": 2
        },
        "end": {
          "line": 84,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3650,
      "end": 3651,
      "loc": {
        "start": {
          "line": 85,
          "column": 0
        },
        "end": {
          "line": 85,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3652,
      "end": 3652,
      "loc": {
        "start": {
          "line": 86,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 0
        }
      }
    }
  ]
}